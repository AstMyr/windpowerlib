v0.2.0 (September 9, 2019)
++++++++++++++++++++++++++++++

API changes
#############
* The :class:`~windpowerlib.wind_turbine.WindTurbine` API has been revised. Main changes are that the parameters `fetch_curve` and `data_source` have been removed. These parameters were formerly used to specify whether the power or power coefficient curve should be retrieved and the source to retrieve them from. Now per default the power curve and/or power coefficient curve are tried to be retrieved from the oedb turbine library that is provided along with the windpowerlib and holds turbine data for a large set of wind turbines. Further important changes are the renaming of the parameter `name` to `turbine_type` and the removal of the `coordinates`. See the :class:`~windpowerlib.wind_turbine.WindTurbine` docstring and `Initialize wind turbine` in the :ref:`examples_section_label` section for more information. (`PR 62 <https://github.com/wind-python/windpowerlib/pull/62>`)
* The :class:`~windpowerlib.wind_farm.WindFarm` API has been revised. The `wind_turbine_fleet` parameter can now be provided as a pandas DataFrame (`PR 63 <https://github.com/wind-python/windpowerlib/pull/63>`_) or as a list using the :func:`~windpowerlib.wind_turbine.WindTurbine.to_group` method (`PR 68 <https://github.com/wind-python/windpowerlib/pull/68>`_. Furthermore, the option to specify the wind turbine fleet using the total installed capacity of each turbine type has been added. See the :class:`~windpowerlib.wind_farm.WindFarm` docstring and `Initialize wind farm` in the :ref:`examples_section_label` section for more information.
* get_installed_power() methods in :class:`~windpowerlib.wind_farm.WindFarm` and  :class:`~windpowerlib.wind_turbine_cluster.WindTurbineCluster` were removed. Installed power is instead now directly calculated inside the nominal_power getter.
* Removed unnecessary `wake_losses_model` parameter in :py:func:`~.power_curves.wake_losses_to_power_curve`. Whether a constant wind farm efficiency or a wind farm efficiency curve is used is decided by the type of the wind farm efficiency.
* Combined options 'constant_efficiency' and 'power_efficiency_curve' of `wake_losses_model` parameter in :py:func:`~.turbine_cluster_modelchain.TurbineClusterModelChain` to 'wind_farm_efficiency'. Therefore, default value of `wake_losses_model` in :py:func:`~.wind_farm.WindFarm.assign_power_curve` and :py:func:`~.wind_turbine_cluster.WindTurbineCluster.assign_power_curve` changed to 'wind_farm_efficiency'.
* Removed `overwrite` parameter from :py:func:`~.wind_turbine.get_turbine_data_from_oedb`

Other changes
#############
* Power curves and nominal power of wind turbines are now saved in file in W instead of kW to be consistent with internal units.
* Restructured csv reading for offline usage of windpowerlib. The nominal power of wind turbines is now saved to a separate file along with other turbine data from the oedb turbine library.
* get_turbine_types() can now be used to get provided turbine types of oedb turbine library as well as provided turbine types of local files.

Documentation
#############
* Improved documentation of :class:`~windpowerlib.modelchain.ModelChain` and :class:`~windpowerlib.turbine_cluster_modelchain.TurbineClusterModelChain` parameters (`PR 64 <https://github.com/wind-python/windpowerlib/pull/64>`_).
* Added info in README and getting started section on how to contribute to the oedb wind turbine library.

Contributors
############
* Sabine Haas
* Birgit Schachler
* Uwe Krien

